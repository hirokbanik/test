{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\components\\Footer.svelte",
    "..\\src\\components\\Navbar.svelte",
    "..\\src\\components\\Main.svelte",
    "..\\src\\components\\UI\\Card.svelte",
    "..\\src\\components\\pages\\Home.svelte",
    "..\\src\\components\\pages\\Test.svelte"
  ],
  "sourcesContent": [
    "<style>\r\n  .footer {\r\n    background-color: var(--white);\r\n    color: var(--dark);\r\n    display: grid;\r\n    justify-content: center;\r\n    align-items: center;\r\n    grid-column-gap: 1rem;\r\n    padding: 0.25rem 1rem;\r\n    /* border-top: 1px solid var(--light); */\r\n    position: fixed;\r\n    bottom: 0;\r\n    width: 100%;\r\n  }\r\n  .credit {\r\n    text-align: center;\r\n  }\r\n  a {\r\n    color: inherit;\r\n  }\r\n</style>\r\n\r\n<div class=\"footer\">\r\n  <p class=\"credit\">\r\n    Made with ‚ù§ by\r\n    <a href=\"https://youtube.com/c/technologyfaq\" target=\"_blank\">\r\n      Technology FAQ\r\n    </a>\r\n  </p>\r\n</div>\r\n",
    "<style>\r\n  .navbar {\r\n    color: var(--dark);\r\n    background-color: var(--white);\r\n    display: grid;\r\n    justify-content: left;\r\n    align-items: center;\r\n    grid-template-columns: auto auto;\r\n    grid-column-gap: 1rem;\r\n    padding: 0 1rem;\r\n    /* border-bottom: 1px solid var(--light); */\r\n    height: 2.5rem;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n  }\r\n  .title {\r\n    font-size: 1.25rem;\r\n  }\r\n</style>\r\n\r\n<div class=\"navbar\">\r\n  <i class=\"material-icons\">menu</i>\r\n  <div class=\"title\">MCQ Guru</div>\r\n</div>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import Card from \"./UI/Card.svelte\";\r\n  import Home from \"./pages/Home.svelte\";\r\n  // import Ctet from \"./pages/Ctet.svelte\";\r\n  import Test from \"./pages/Test.svelte\";\r\n\r\n  let currentPage;\r\n\r\n  // if (currentPage === \"CTET\")\r\n  //   subjects = [\r\n  //     {\r\n  //       category: \"Lower Primary\",\r\n  //       shortName: \"LP\",\r\n  //       topics: [\"Pedagogy\", \"EVS\", \"Mathematics\", \"English\", \"Bengali\"]\r\n  //     },\r\n  //     {\r\n  //       category: \"Upper Primary\",\r\n  //       shortName: \"UP\",\r\n  //       topics: [\"Pedagogy\", \"EVS\", \"Mathematics\", \"English\", \"Bengali\"]\r\n  //     }\r\n  //   ];\r\n  // else\r\n  //   subjects = [\r\n  //     {\r\n  //       category: \"Quiz\",\r\n  //       shortName: \"Quiz\",\r\n  //       topics: [\"GK\", \"Movies\", \"Celebrity\"]\r\n  //     }\r\n  //   ];\r\n\r\n  onMount(() => {\r\n    currentPage = \"Home\";\r\n    history.pushState(\"Home\", \"Home\", \"/Home\");\r\n  });\r\n  const loadPage = e => {\r\n    if (e.detail.page) currentPage = e.detail.page;\r\n    else currentPage = e;\r\n    history.pushState(currentPage, currentPage, currentPage);\r\n  };\r\n\r\n  window.onpopstate = e => {\r\n    currentPage = e.state;\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .main {\r\n    margin: 2.5rem 0 2rem;\r\n    padding: 0.5rem 1rem;\r\n  }\r\n</style>\r\n\r\n<div class=\"main\">\r\n  {#if currentPage === 'Home'}\r\n    <Home on:loadpage={loadPage} />\r\n  {:else if currentPage === 'Quiz'}\r\n    <Test testName={currentPage} />\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n  // import Button from \"./Button.svelte\";\r\n</script>\r\n\r\n<style>\r\n  .card {\r\n    background-color: white;\r\n    display: grid;\r\n    /* justify-content: center; */\r\n    /* align-items: center; */\r\n    padding: 1rem;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    border: 1px solid var(--light);\r\n    box-shadow: 0 1px 4px 1px #00000030;\r\n    user-select: none;\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n\r\n<div class=\"card\" on:click>\r\n  <slot />\r\n</div>\r\n",
    "<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import Card from \"../UI/Card.svelte\";\r\n\r\n  let dispatch = createEventDispatcher();\r\n</script>\r\n\r\n<style>\r\n  .content {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    grid-gap: 0.5rem;\r\n    margin-top: 1rem;\r\n  }\r\n</style>\r\n\r\n<h3>Choose your Test</h3>\r\n<div class=\"content\">\r\n  <!-- <Card on:click={() => dispatch('loadpage', { page: 'CTET' })}>\r\n    <h2>CTET</h2>\r\n  </Card> -->\r\n  <Card on:click={() => dispatch('loadpage', { page: 'Quiz' })}>\r\n    <h2>Quiz</h2>\r\n  </Card>\r\n  <Card>\r\n    <h3>More Coming Soon...</h3>\r\n  </Card>\r\n</div>\r\n",
    "<script>\r\n  import Card from \"../UI/Card.svelte\";\r\n  import { createEventDispatcher, onMount } from \"svelte\";\r\n  export let testName;\r\n  let subjects = getSubjects();\r\n\r\n  let dispatch = createEventDispatcher();\r\n\r\n  async function getSubjects() {\r\n    if (!localStorage[\"quizObj\"]) {\r\n      let url = \"https://opentdb.com/api_category.php\";\r\n      subjects = await fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          subjects = data.trivia_categories;\r\n          localStorage.setItem(\"quizObj\", JSON.stringify(subjects));\r\n        });\r\n    } else {\r\n      subjects = await JSON.parse(localStorage[\"quizObj\"]);\r\n    }\r\n    console.log(subjects);\r\n    return subjects;\r\n  }\r\n\r\n  onMount(() => (subjects = getSubjects()));\r\n</script>\r\n\r\n<style>\r\n  .main {\r\n    display: grid;\r\n    grid-row-gap: 1.5rem;\r\n  }\r\n  .content {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    grid-gap: 0.5rem;\r\n    margin-top: 1rem;\r\n  }\r\n</style>\r\n\r\n<div class=\"main\">\r\n  <!-- {#each subjects as subject}\r\n    <section>\r\n      <h3>{subject.category}</h3>\r\n      <div class=\"content\">\r\n        {#each subject.topics as topic}\r\n          <Card\r\n            on:click={() => alert(`${testName}/${subject.shortName}/${topic}`)}>\r\n            <h2>{topic}</h2>\r\n          </Card>\r\n        {/each}\r\n      </div>\r\n    </section>\r\n  {/each} -->\r\n  <div class=\"content\">\r\n    {#await subjects}\r\n      <Card>\r\n        <h3>Loading...</h3>\r\n      </Card>\r\n    {:then}\r\n      {#each subjects as subject (subject.id)}\r\n        <Card on:click={() => alert(`${subject.name}`)}>\r\n          <h3>{subject.name}</h3>\r\n        </Card>\r\n      {/each}\r\n    {:catch}\r\n      <Card>\r\n        <h3>Loading Error...</h3>\r\n      </Card>\r\n    {/await}\r\n  </div>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AACE,OAAO,cAAC,CAAC,AACP,gBAAgB,CAAE,IAAI,OAAO,CAAC,CAC9B,KAAK,CAAE,IAAI,MAAM,CAAC,CAClB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,OAAO,CAAC,IAAI,CAErB,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,AACb,CAAC,AACD,OAAO,cAAC,CAAC,AACP,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,CAAC,cAAC,CAAC,AACD,KAAK,CAAE,OAAO,AAChB,CAAC;AClBD,OAAO,cAAC,CAAC,AACP,KAAK,CAAE,IAAI,MAAM,CAAC,CAClB,gBAAgB,CAAE,IAAI,OAAO,CAAC,CAC9B,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,IAAI,CACrB,WAAW,CAAE,MAAM,CACnB,qBAAqB,CAAE,IAAI,CAAC,IAAI,CAChC,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,CAAC,CAAC,IAAI,CAEf,MAAM,CAAE,MAAM,CACd,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,IAAI,AACb,CAAC,AACD,MAAM,cAAC,CAAC,AACN,SAAS,CAAE,OAAO,AACpB,CAAC;AC6BD,KAAK,eAAC,CAAC,AACL,MAAM,CAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CACrB,OAAO,CAAE,MAAM,CAAC,IAAI,AACtB,CAAC;AC7CD,KAAK,eAAC,CAAC,AACL,gBAAgB,CAAE,KAAK,CACvB,OAAO,CAAE,IAAI,CAGb,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CAC9B,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CACnC,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,AACjB,CAAC;ACTD,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,QAAQ,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAC3D,QAAQ,CAAE,MAAM,CAChB,UAAU,CAAE,IAAI,AAClB,CAAC;ACeD,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,YAAY,CAAE,MAAM,AACtB,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,QAAQ,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAC3D,QAAQ,CAAE,MAAM,CAChB,UAAU,CAAE,IAAI,AAClB,CAAC"
}